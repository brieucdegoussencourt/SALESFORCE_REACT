export declare const APEX_TYPES: {
    TRIGGER_USAGE: "apex.jorje.data.ast.TriggerUsage";
    LOCATION_IDENTIFIER: "apex.jorje.data.Identifiers$LocationIdentifier";
    PARSER_OUTPUT: "apex.jorje.semantic.compiler.parser.ParserOutput";
    CLASS_TYPE_REF: "apex.jorje.data.ast.TypeRefs$ClassTypeRef";
    ARRAY_TYPE_REF: "apex.jorje.data.ast.TypeRefs$ArrayTypeRef";
    JAVA_TYPE_REF: "apex.jorje.data.ast.TypeRefs$JavaTypeRef";
    MODIFIER: "apex.jorje.data.ast.Modifier";
    ANNOTATION: "apex.jorje.data.ast.Modifier$Annotation";
    ANNOTATION_KEY_VALUE: "apex.jorje.data.ast.AnnotationParameter$AnnotationKeyValue";
    ANNOTATION_VALUE: "apex.jorje.data.ast.AnnotationValue";
    ANNOTATION_STRING: "apex.jorje.data.ast.AnnotationParameter$AnnotationString";
    MODIFIER_PARAMETER_REF: "apex.jorje.data.ast.ParameterRefs$ModifierParameterRef";
    EMPTY_MODIFIER_PARAMETER_REF: "apex.jorje.data.ast.ParameterRefs$EmptyModifierParameterRef";
    BLOCK_STATEMENT: "apex.jorje.data.ast.Stmnt$BlockStmnt";
    RETURN_STATEMENT: "apex.jorje.data.ast.Stmnt$ReturnStmnt";
    VARIABLE_DECLARATION_STATEMENT: "apex.jorje.data.ast.Stmnt$VariableDeclStmnt";
    VARIABLE_DECLARATIONS: "apex.jorje.data.ast.VariableDecls";
    NAME_VALUE_PARAMETER: "apex.jorje.data.ast.NameValueParameter";
    IF_ELSE_BLOCK: "apex.jorje.data.ast.Stmnt$IfElseBlock";
    IF_BLOCK: "apex.jorje.data.ast.IfBlock";
    ELSE_BLOCK: "apex.jorje.data.ast.ElseBlock";
    EXPRESSION_STATEMENT: "apex.jorje.data.ast.Stmnt$ExpressionStmnt";
    RUN_AS_BLOCK: "apex.jorje.data.ast.Stmnt$RunAsBlock";
    WHILE_LOOP: "apex.jorje.data.ast.Stmnt$WhileLoop";
    DO_LOOP: "apex.jorje.data.ast.Stmnt$DoLoop";
    FOR_LOOP: "apex.jorje.data.ast.Stmnt$ForLoop";
    FOR_C_STYLE_CONTROL: "apex.jorje.data.ast.ForControl$CStyleForControl";
    FOR_ENHANCED_CONTROL: "apex.jorje.data.ast.ForControl$EnhancedForControl";
    FOR_INITS: "apex.jorje.data.ast.ForInits";
    FOR_INIT: "apex.jorje.data.ast.ForInit";
    BREAK_STATEMENT: "apex.jorje.data.ast.Stmnt$BreakStmnt";
    CONTINUE_STATEMENT: "apex.jorje.data.ast.Stmnt$ContinueStmnt";
    THROW_STATEMENT: "apex.jorje.data.ast.Stmnt$ThrowStmnt";
    TRY_CATCH_FINALLY_BLOCK: "apex.jorje.data.ast.Stmnt$TryCatchFinallyBlock";
    CATCH_BLOCK: "apex.jorje.data.ast.CatchBlock";
    FINALLY_BLOCK: "apex.jorje.data.ast.FinallyBlock";
    STATEMENT: "apex.jorje.data.ast.Stmnt";
    DML_INSERT_STATEMENT: "apex.jorje.data.ast.Stmnt$DmlInsertStmnt";
    DML_UPDATE_STATEMENT: "apex.jorje.data.ast.Stmnt$DmlUpdateStmnt";
    DML_UPSERT_STATEMENT: "apex.jorje.data.ast.Stmnt$DmlUpsertStmnt";
    DML_DELETE_STATEMENT: "apex.jorje.data.ast.Stmnt$DmlDeleteStmnt";
    DML_UNDELETE_STATEMENT: "apex.jorje.data.ast.Stmnt$DmlUndeleteStmnt";
    DML_MERGE_STATEMENT: "apex.jorje.data.ast.Stmnt$DmlMergeStmnt";
    SWITCH_STATEMENT: "apex.jorje.data.ast.Stmnt$SwitchStmnt";
    VALUE_WHEN: "apex.jorje.data.ast.WhenBlock$ValueWhen";
    ELSE_WHEN: "apex.jorje.data.ast.WhenBlock$ElseWhen";
    TYPE_WHEN: "apex.jorje.data.ast.WhenBlock$TypeWhen";
    ENUM_CASE: "apex.jorje.data.ast.WhenCase$EnumCase";
    LITERAL_CASE: "apex.jorje.data.ast.WhenCase$LiteralCase";
    PROPERTY_DECLATION: "apex.jorje.data.ast.PropertyDecl";
    PROPERTY_GETTER: "apex.jorje.data.ast.PropertyGetter";
    PROPERTY_SETTER: "apex.jorje.data.ast.PropertySetter";
    BLOCK_COMMENT: "apex.jorje.parser.impl.HiddenTokens$BlockComment";
    INLINE_COMMENT: "apex.jorje.parser.impl.HiddenTokens$InlineComment";
    REQUEST_VERSION: "apex.jorje.data.ast.VersionRef$RequestVersion";
    STRUCTURED_VERSION: "apex.jorje.data.ast.VersionRef$StructuredVersion";
    BINARY_OPERATOR: "apex.jorje.data.ast.BinaryOp";
    ASSIGNMENT_OPERATOR: "apex.jorje.data.ast.AssignmentOp";
    BOOLEAN_OPERATOR: "apex.jorje.data.ast.BooleanOp";
    POSTFIX_OPERATOR: "apex.jorje.data.ast.PostfixOp";
    PREFIX_OPERATOR: "apex.jorje.data.ast.PrefixOp";
    CLASS_DECLARATION: "apex.jorje.data.ast.ClassDecl";
    INTERFACE_DECLARATION: "apex.jorje.data.ast.InterfaceDecl";
    METHOD_DECLARATION: "apex.jorje.data.ast.MethodDecl";
    VARIABLE_DECLARATION: "apex.jorje.data.ast.VariableDecl";
    ENUM_DECLARATION: "apex.jorje.data.ast.EnumDecl";
    CLASS_DECLARATION_UNIT: "apex.jorje.data.ast.CompilationUnit$ClassDeclUnit";
    ENUM_DECLARATION_UNIT: "apex.jorje.data.ast.CompilationUnit$EnumDeclUnit";
    TRIGGER_DECLARATION_UNIT: "apex.jorje.data.ast.CompilationUnit$TriggerDeclUnit";
    INTERFACE_DECLARATION_UNIT: "apex.jorje.data.ast.CompilationUnit$InterfaceDeclUnit";
    ANONYMOUS_BLOCK_UNIT: "apex.jorje.data.ast.CompilationUnit$AnonymousBlockUnit";
    PROPERTY_MEMBER: "apex.jorje.data.ast.BlockMember$PropertyMember";
    FIELD_MEMBER: "apex.jorje.data.ast.BlockMember$FieldMember";
    STATEMENT_BLOCK_MEMBER: "apex.jorje.data.ast.BlockMember$StmntBlockMember";
    STATIC_STATEMENT_BLOCK_MEMBER: "apex.jorje.data.ast.BlockMember$StaticStmntBlockMember";
    METHOD_MEMBER: "apex.jorje.data.ast.BlockMember$MethodMember";
    INNER_ENUM_MEMBER: "apex.jorje.data.ast.BlockMember$InnerEnumMember";
    INNER_CLASS_MEMBER: "apex.jorje.data.ast.BlockMember$InnerClassMember";
    INNER_INTERFACE_MEMBER: "apex.jorje.data.ast.BlockMember$InnerInterfaceMember";
    METHOD_CALL_EXPRESSION: "apex.jorje.data.ast.Expr$MethodCallExpr";
    BINARY_EXPRESSION: "apex.jorje.data.ast.Expr$BinaryExpr";
    LITERAL_EXPRESSION: "apex.jorje.data.ast.Expr$LiteralExpr";
    VARIABLE_EXPRESSION: "apex.jorje.data.ast.Expr$VariableExpr";
    THIS_VARIABLE_EXPRESSION: "apex.jorje.data.ast.Expr$ThisVariableExpr";
    BOOLEAN_EXPRESSION: "apex.jorje.data.ast.Expr$BooleanExpr";
    NESTED_EXPRESSION: "apex.jorje.data.ast.Expr$NestedExpr";
    TERNARY_EXPRESSION: "apex.jorje.data.ast.Expr$TernaryExpr";
    ASSIGNMENT_EXPRESSION: "apex.jorje.data.ast.Expr$AssignmentExpr";
    TRIGGER_VARIABLE_EXPRESSION: "apex.jorje.data.ast.Expr$TriggerVariableExpr";
    PREFIX_EXPRESSION: "apex.jorje.data.ast.Expr$PrefixExpr";
    POSTFIX_EXPRESSION: "apex.jorje.data.ast.Expr$PostfixExpr";
    NEW_EXPRESSION: "apex.jorje.data.ast.Expr$NewExpr";
    CAST_EXPRESSION: "apex.jorje.data.ast.Expr$CastExpr";
    INSTANCE_OF_EXPRESSION: "apex.jorje.data.ast.Expr$InstanceOf";
    PACKAGE_VERSION_EXPRESSION: "apex.jorje.data.ast.Expr$PackageVersionExpr";
    ARRAY_EXPRESSION: "apex.jorje.data.ast.Expr$ArrayExpr";
    SUPER_VARIABLE_EXPRESSION: "apex.jorje.data.ast.Expr$SuperVariableExpr";
    CLASS_REF_EXPRESSION: "apex.jorje.data.ast.Expr$ClassRefExpr";
    THIS_METHOD_CALL_EXPRESSION: "apex.jorje.data.ast.Expr$ThisMethodCallExpr";
    SUPER_METHOD_CALL_EXPRESSION: "apex.jorje.data.ast.Expr$SuperMethodCallExpr";
    SOQL_EXPRESSION: "apex.jorje.data.ast.Expr$SoqlExpr";
    SOSL_EXPRESSION: "apex.jorje.data.ast.Expr$SoslExpr";
    JAVA_VARIABLE_EXPRESSION: "apex.jorje.data.ast.Expr$JavaVariableExpr";
    JAVA_METHOD_CALL_EXPRESSION: "apex.jorje.data.ast.Expr$JavaMethodCallExpr";
    NULL_COALESCING_EXPRESSION: "apex.jorje.data.ast.Expr$NullCoalescingExpr";
    NEW_SET_INIT: "apex.jorje.data.ast.NewObject$NewSetInit";
    NEW_SET_LITERAL: "apex.jorje.data.ast.NewObject$NewSetLiteral";
    NEW_LIST_INIT: "apex.jorje.data.ast.NewObject$NewListInit";
    NEW_LIST_LITERAL: "apex.jorje.data.ast.NewObject$NewListLiteral";
    NEW_MAP_INIT: "apex.jorje.data.ast.NewObject$NewMapInit";
    NEW_MAP_LITERAL: "apex.jorje.data.ast.NewObject$NewMapLiteral";
    NEW_STANDARD: "apex.jorje.data.ast.NewObject$NewStandard";
    NEW_KEY_VALUE: "apex.jorje.data.ast.NewObject$NewKeyValue";
    MAP_LITERAL_KEY_VALUE: "apex.jorje.data.ast.MapLiteralKeyValue";
    SEARCH: "apex.jorje.data.sosl.Search";
    FIND_CLAUSE: "apex.jorje.data.sosl.FindClause";
    FIND_VALUE: "apex.jorje.data.sosl.FindValue";
    IN_CLAUSE: "apex.jorje.data.sosl.InClause";
    WITH_DIVISION_CLAUSE: "apex.jorje.data.sosl.WithDivisionClause";
    DIVISION_VALUE: "apex.jorje.data.sosl.DivisionValue";
    WITH_DATA_CATEGORY_CLAUSE: "apex.jorje.data.sosl.WithDataCategoryClause";
    SEARCH_WITH_CLAUSE: "apex.jorje.data.sosl.SearchWithClause";
    SEARCH_WITH_CLAUSE_VALUE: "apex.jorje.data.sosl.SearchWithClauseValue";
    RETURNING_CLAUSE: "apex.jorje.data.sosl.ReturningClause";
    RETURNING_EXPRESSION: "apex.jorje.data.sosl.ReturningExpr";
    RETURNING_SELECT_EXPRESSION: "apex.jorje.data.sosl.ReturningSelectExpr";
    SEARCH_USING_CLAUSE: "apex.jorje.data.sosl.SearchUsingClause";
    USING_TYPE: "apex.jorje.data.sosl.UsingType";
    QUERY: "apex.jorje.data.soql.Query";
    BIND_CLAUSE: "apex.jorje.data.soql.BindClause";
    BIND_EXPRESSION: "apex.jorje.data.soql.BindExpr";
    SELECT_INNER_QUERY: "apex.jorje.data.soql.SelectExpr$SelectInnerQuery";
    SELECT_COLUMN_CLAUSE: "apex.jorje.data.soql.SelectClause$SelectColumnClause";
    SELECT_COUNT_CLAUSE: "apex.jorje.data.soql.SelectClause$SelectCountClause";
    SELECT_COLUMN_EXPRESSION: "apex.jorje.data.soql.SelectExpr$SelectColumnExpr";
    SELECT_CASE_EXPRESSION: "apex.jorje.data.soql.SelectExpr$SelectCaseExpr";
    CASE_EXPRESSION: "apex.jorje.data.soql.CaseExpr";
    CASE_OPERATOR: "apex.jorje.data.soql.CaseOp";
    WHEN_EXPRESSION: "apex.jorje.data.soql.WhenExpr";
    WHEN_OPERATOR: "apex.jorje.data.soql.WhenOp";
    ELSE_EXPRESSION: "apex.jorje.data.soql.ElseExpr";
    FIELD: "apex.jorje.data.soql.Field";
    FIELD_IDENTIFIER: "apex.jorje.data.soql.FieldIdentifier";
    FROM_CLAUSE: "apex.jorje.data.soql.FromClause";
    FROM_EXPRESSION: "apex.jorje.data.soql.FromExpr";
    WHERE_CLAUSE: "apex.jorje.data.soql.WhereClause";
    WHERE_INNER_EXPRESSION: "apex.jorje.data.soql.WhereExpr$WhereInnerExpr";
    WHERE_OPERATION_EXPRESSION: "apex.jorje.data.soql.WhereExpr$WhereOpExpr";
    WHERE_OPERATION_EXPRESSIONS: "apex.jorje.data.soql.WhereExpr$WhereOpExprs";
    APEX_EXPRESSION: "apex.jorje.data.soql.QueryExpr$ApexExpr";
    COLON_EXPRESSION: "apex.jorje.data.soql.ColonExpr";
    ORDER_BY_CLAUSE: "apex.jorje.data.soql.OrderByClause";
    ORDER_BY_EXPRESSION: "apex.jorje.data.soql.OrderByExpr";
    GROUP_BY_CLAUSE: "apex.jorje.data.soql.GroupByClause";
    GROUP_BY_EXPRESSION: "apex.jorje.data.soql.GroupByExpr";
    GROUP_BY_TYPE: "apex.jorje.data.soql.GroupByType";
    HAVING_CLAUSE: "apex.jorje.data.soql.HavingClause";
    LIMIT_VALUE: "apex.jorje.data.soql.LimitClause$LimitValue";
    LIMIT_EXPRESSION: "apex.jorje.data.soql.LimitClause$LimitExpr";
    OFFSET_VALUE: "apex.jorje.data.soql.OffsetClause$OffsetValue";
    OFFSET_EXPRESSION: "apex.jorje.data.soql.OffsetClause$OffsetExpr";
    WHERE_CALC_EXPRESSION: "apex.jorje.data.soql.WhereExpr$WhereCalcExpr";
    WHERE_CALC_OPERATOR_PLUS: "apex.jorje.data.soql.WhereCalcOp$WhereCalcPlus";
    WHERE_CALC_OPERATOR_MINUS: "apex.jorje.data.soql.WhereCalcOp$WhereCalcMinus";
    WHERE_COMPOUND_EXPRESSION: "apex.jorje.data.soql.WhereExpr$WhereCompoundExpr";
    WHERE_COMPOUND_OPERATOR: "apex.jorje.data.soql.WhereCompoundOp";
    WHERE_UNARY_EXPRESSION: "apex.jorje.data.soql.WhereExpr$WhereUnaryExpr";
    WHERE_UNARY_OPERATOR: "apex.jorje.data.soql.WhereUnaryOp";
    SELECT_DISTANCE_EXPRESSION: "apex.jorje.data.soql.SelectExpr$SelectDistanceExpr";
    WHERE_DISTANCE_EXPRESSION: "apex.jorje.data.soql.WhereExpr$WhereDistanceExpr";
    DISTANCE_FUNCTION_EXPRESSION: "apex.jorje.data.soql.DistanceFunctionExpr";
    GEOLOCATION_LITERAL: "apex.jorje.data.soql.Geolocation$GeolocationLiteral";
    GEOLOCATION_EXPRESSION: "apex.jorje.data.soql.Geolocation$GeolocationExpr";
    NUMBER_LITERAL: "apex.jorje.data.soql.NumberClause$NumberLiteral";
    NUMBER_EXPRESSION: "apex.jorje.data.soql.NumberClause$NumberExpr";
    QUERY_LITERAL_EXPRESSION: "apex.jorje.data.soql.QueryExpr$LiteralExpr";
    QUERY_LITERAL: "apex.jorje.data.soql.QueryLiteral";
    QUERY_LITERAL_STRING: "apex.jorje.data.soql.QueryLiteral$QueryString";
    QUERY_LITERAL_NULL: "apex.jorje.data.soql.QueryLiteral$QueryNull";
    QUERY_LITERAL_TRUE: "apex.jorje.data.soql.QueryLiteral$QueryTrue";
    QUERY_LITERAL_FALSE: "apex.jorje.data.soql.QueryLiteral$QueryFalse";
    QUERY_LITERAL_NUMBER: "apex.jorje.data.soql.QueryLiteral$QueryNumber";
    QUERY_LITERAL_DATE_FORMULA: "apex.jorje.data.soql.QueryLiteral$QueryDateFormula";
    QUERY_OPERATOR: "apex.jorje.data.soql.QueryOp";
    QUERY_OPERATOR_LIKE: "apex.jorje.data.soql.QueryOp$QueryLike";
    SOQL_ORDER: "apex.jorje.data.soql.Order";
    SOQL_ORDER_NULL: "apex.jorje.data.soql.OrderNull";
    TRACKING_TYPE: "apex.jorje.data.soql.TrackingType";
    QUERY_OPTION: "apex.jorje.data.soql.QueryOption";
    QUERY_USING_CLAUSE: "apex.jorje.data.soql.QueryUsingClause";
    USING_EXPRESSION: "apex.jorje.data.soql.UsingExpr";
    UPDATE_STATS_CLAUSE: "apex.jorje.data.soql.UpdateStatsClause";
    UPDATE_STATS_OPTION: "apex.jorje.data.soql.UpdateStatsOption";
    WITH_VALUE: "apex.jorje.data.soql.WithClause$WithValue";
    WITH_DATA_CATEGORIES: "apex.jorje.data.soql.WithClause$WithDataCategories";
    DATA_CATEGORY: "apex.jorje.data.soql.DataCategory";
    DATA_CATEGORY_OPERATOR: "apex.jorje.data.soql.DataCategoryOperator";
    WITH_IDENTIFIER: "apex.jorje.data.soql.WithIdentifierClause$WithIdentifier";
};
export declare const BINARY: {
    ADDITION: "+";
    SUBTRACTION: "-";
    MULTIPLICATION: "*";
    DIVISION: "/";
    LEFT_SHIFT: "<<";
    RIGHT_SHIFT: ">>";
    UNSIGNED_RIGHT_SHIFT: ">>>";
    XOR: "^";
    AND: "&";
    OR: "|";
};
export declare const BOOLEAN: {
    DOUBLE_EQUAL: "==";
    TRIPLE_EQUAL: "===";
    NOT_TRIPLE_EQUAL: "!==";
    NOT_EQUAL: "!=";
    ALT_NOT_EQUAL: "<>";
    LESS_THAN: "<";
    GREATER_THAN: ">";
    LESS_THAN_EQUAL: "<=";
    GREATER_THAN_EQUAL: ">=";
    AND: "&&";
    OR: "||";
};
export declare const ASSIGNMENT: {
    EQUALS: "=";
    AND_EQUALS: "&=";
    OR_EQUALS: "|=";
    XOR_EQUALS: "^=";
    ADDITION_EQUALS: "+=";
    SUBTRACTION_EQUALS: "-=";
    MULTIPLICATION_EQUALS: "*=";
    DIVISION_EQUALS: "/=";
    LEFT_SHIFT_EQUALS: "<<=";
    RIGHT_SHIFT_EQUALS: ">>=";
    UNSIGNED_RIGHT_SHIFT_EQUALS: ">>>=";
};
export declare const POSTFIX: {
    INC: "++";
    DEC: "--";
};
export declare const PREFIX: {
    POSITIVE: "+";
    NEGATIVE: "-";
    NOT: "!";
    BITWISE_COMPLEMENT: "~";
    INC: "++";
    DEC: "--";
};
export declare const QUERY: {
    "apex.jorje.data.soql.QueryOp$QueryIncludes": "INCLUDES";
    "apex.jorje.data.soql.QueryOp$QueryExcludes": "EXCLUDES";
    "apex.jorje.data.soql.QueryOp$QueryEqual": "=";
    "apex.jorje.data.soql.QueryOp$QueryDoubleEqual": "==";
    "apex.jorje.data.soql.QueryOp$QueryTripleEqual": "===";
    "apex.jorje.data.soql.QueryOp$QueryNotEqual": "!=";
    "apex.jorje.data.soql.QueryOp$QueryNotTripleEqual": "!==";
    "apex.jorje.data.soql.QueryOp$QueryLike": "LIKE";
    "apex.jorje.data.soql.QueryOp$QueryLessThanEqual": "<=";
    "apex.jorje.data.soql.QueryOp$QueryGreaterThanEqual": ">=";
    "apex.jorje.data.soql.QueryOp$QueryLessThan": "<";
    "apex.jorje.data.soql.QueryOp$QueryGreaterThan": ">";
    "apex.jorje.data.soql.QueryOp$QueryIn": "IN";
    "apex.jorje.data.soql.QueryOp$QueryNotIn": "NOT IN";
};
export declare const ORDER: {
    "apex.jorje.data.soql.Order$OrderDesc": "DESC";
    "apex.jorje.data.soql.Order$OrderAsc": "ASC";
};
export declare const ORDER_NULL: {
    "apex.jorje.data.soql.OrderNull$OrderNullFirst": "NULLS FIRST";
    "apex.jorje.data.soql.OrderNull$OrderNullLast": "NULLS LAST";
};
export declare const QUERY_WHERE: {
    "apex.jorje.data.soql.WhereCompoundOp$QueryAnd": "AND";
    "apex.jorje.data.soql.WhereCompoundOp$QueryOr": "OR";
};
export declare const MODIFIER: {
    "apex.jorje.data.ast.Modifier$PublicModifier": "public";
    "apex.jorje.data.ast.Modifier$PrivateModifier": "private";
    "apex.jorje.data.ast.Modifier$VirtualModifier": "virtual";
    "apex.jorje.data.ast.Modifier$HiddenModifier": "hidden";
    "apex.jorje.data.ast.Modifier$ProtectedModifier": "protected";
    "apex.jorje.data.ast.Modifier$AbstractModifier": "abstract";
    "apex.jorje.data.ast.Modifier$StaticModifier": "static";
    "apex.jorje.data.ast.Modifier$TestMethodModifier": "testMethod";
    "apex.jorje.data.ast.Modifier$WebServiceModifier": "webService";
    "apex.jorje.data.ast.Modifier$FinalModifier": "final";
    "apex.jorje.data.ast.Modifier$TransientModifier": "transient";
    "apex.jorje.data.ast.Modifier$GlobalModifier": "global";
    "apex.jorje.data.ast.Modifier$WithoutSharingModifier": "without sharing";
    "apex.jorje.data.ast.Modifier$WithSharingModifier": "with sharing";
    "apex.jorje.data.ast.Modifier$InheritedSharingModifier": "inherited sharing";
    "apex.jorje.data.ast.Modifier$OverrideModifier": "override";
    "apex.jorje.data.ast.Modifier$Annotation": "";
};
export declare const DATA_CATEGORY: {
    "apex.jorje.data.soql.DataCategoryOperator$DataCategoryAt": "AT";
    "apex.jorje.data.soql.DataCategoryOperator$DataCategoryAbove": "ABOVE";
    "apex.jorje.data.soql.DataCategoryOperator$DataCategoryBelow": "BELOW";
    "apex.jorje.data.soql.DataCategoryOperator$DataCategoryAboveOrBelow": "ABOVE_OR_BELOW";
};
export declare const TRIGGER_USAGE: {
    BEFORE_DELETE: "before delete";
    BEFORE_INSERT: "before insert";
    BEFORE_UPDATE: "before update";
    BEFORE_UNDELETE: "before undelete";
    AFTER_DELETE: "after delete";
    AFTER_INSERT: "after insert";
    AFTER_UPDATE: "after update";
    AFTER_UNDELETE: "after undelete";
};
export declare const ALLOW_TRAILING_EMPTY_LINE: ("apex.jorje.data.ast.Stmnt$BlockStmnt" | "apex.jorje.data.ast.Stmnt$ReturnStmnt" | "apex.jorje.data.ast.Stmnt$VariableDeclStmnt" | "apex.jorje.data.ast.Stmnt$IfElseBlock" | "apex.jorje.data.ast.Stmnt$ExpressionStmnt" | "apex.jorje.data.ast.Stmnt$WhileLoop" | "apex.jorje.data.ast.Stmnt$DoLoop" | "apex.jorje.data.ast.Stmnt$ForLoop" | "apex.jorje.data.ast.Stmnt$BreakStmnt" | "apex.jorje.data.ast.Stmnt$ContinueStmnt" | "apex.jorje.data.ast.Stmnt$ThrowStmnt" | "apex.jorje.data.ast.Stmnt$TryCatchFinallyBlock" | "apex.jorje.data.ast.Stmnt$DmlInsertStmnt" | "apex.jorje.data.ast.Stmnt$DmlUpdateStmnt" | "apex.jorje.data.ast.Stmnt$DmlUpsertStmnt" | "apex.jorje.data.ast.Stmnt$DmlDeleteStmnt" | "apex.jorje.data.ast.Stmnt$DmlUndeleteStmnt" | "apex.jorje.data.ast.Stmnt$DmlMergeStmnt" | "apex.jorje.data.ast.Stmnt$SwitchStmnt" | "apex.jorje.data.ast.ClassDecl" | "apex.jorje.data.ast.InterfaceDecl" | "apex.jorje.data.ast.EnumDecl" | "apex.jorje.data.ast.BlockMember$PropertyMember" | "apex.jorje.data.ast.BlockMember$FieldMember" | "apex.jorje.data.ast.BlockMember$MethodMember" | "apex.jorje.data.ast.BlockMember$InnerEnumMember" | "apex.jorje.data.ast.BlockMember$InnerClassMember" | "apex.jorje.data.ast.BlockMember$InnerInterfaceMember")[];
export declare const TRAILING_EMPTY_LINE_AFTER_LAST_NODE: ("apex.jorje.data.ast.Stmnt$VariableDeclStmnt" | "apex.jorje.data.ast.Stmnt$IfElseBlock" | "apex.jorje.data.ast.Stmnt$WhileLoop" | "apex.jorje.data.ast.Stmnt$DoLoop" | "apex.jorje.data.ast.Stmnt$ForLoop" | "apex.jorje.data.ast.Stmnt$TryCatchFinallyBlock" | "apex.jorje.data.ast.Stmnt$SwitchStmnt" | "apex.jorje.data.ast.BlockMember$PropertyMember" | "apex.jorje.data.ast.BlockMember$FieldMember" | "apex.jorje.data.ast.BlockMember$MethodMember" | "apex.jorje.data.ast.BlockMember$InnerEnumMember" | "apex.jorje.data.ast.BlockMember$InnerClassMember" | "apex.jorje.data.ast.BlockMember$InnerInterfaceMember")[];
export declare const ALLOW_DANGLING_COMMENTS: ("apex.jorje.data.ast.Stmnt$BlockStmnt" | "apex.jorje.data.ast.ClassDecl" | "apex.jorje.data.ast.InterfaceDecl" | "apex.jorje.data.ast.EnumDecl" | "apex.jorje.data.ast.CompilationUnit$TriggerDeclUnit")[];
