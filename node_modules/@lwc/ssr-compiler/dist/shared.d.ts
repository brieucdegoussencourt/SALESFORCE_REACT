export type Expression = string;
export type Instruction = IEmitTagName | IEmitStaticString | IEmitExpression | IStartConditional | IEndConditional | IInvokeConnectedCallback | IRenderChild | IHoistImport | IHoistInstantiation;
export interface IEmitTagName {
    kind: 'emitTagName';
}
export interface IEmitStaticString {
    kind: 'emitStaticString';
}
export interface IEmitExpression {
    kind: 'emitExpression';
    expression: Expression;
}
export interface IStartConditional {
    kind: 'startConditional';
}
export interface IEndConditional {
    kind: 'endConditional';
}
export interface IInvokeConnectedCallback {
    kind: 'invokeConnectedCallback';
}
export interface IRenderChild {
    kind: 'renderChild';
    dynamic: Expression | null;
}
export interface IHoistImport {
    kind: 'hoistImport';
}
export interface IHoistInstantiation {
    kind: 'hoistInstantiation';
}
