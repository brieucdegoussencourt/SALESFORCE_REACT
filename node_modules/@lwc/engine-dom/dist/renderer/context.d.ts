import { WireAdapterConstructor, WireContextValue, WireContextSubscriptionPayload, WireContextSubscriptionCallback } from '@lwc/engine-core';
export declare class WireContextSubscriptionEvent extends CustomEvent<undefined> {
    readonly setNewContext: (newContext: WireContextValue) => void;
    readonly setDisconnectedCallback: (disconnectCallback: () => void) => void;
    constructor(adapterToken: string, { setNewContext, setDisconnectedCallback }: WireContextSubscriptionPayload);
}
/**
 * Creates a context provider, given a wire adapter constructor.
 * @param adapter The wire adapter to create a context provider for.
 * @returns A new context provider.
 */
export declare function createContextProvider(adapter: WireAdapterConstructor): import("@lwc/engine-core/dist/framework/wiring/types").ContextProvider;
export declare function registerContextConsumer(elm: Node, adapterContextToken: string, subscriptionPayload: WireContextSubscriptionPayload): void;
export declare function registerContextProvider(elm: Node, adapterContextToken: string, onContextSubscription: WireContextSubscriptionCallback): void;
