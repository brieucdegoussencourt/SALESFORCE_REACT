import { ValueChangedEvent } from './value-changed-event';
/**
 * Registers a wire adapter factory for Lightning Platform.
 * @param adapterId Adapter ID object
 * @param adapterEventTargetCallback Adapter factory function
 * @throws when parameters are not valid
 * @deprecated
 */
export declare function register(adapterId: any, adapterEventTargetCallback: (eventTarget: WireEventTarget) => void): void;
/**
 * Registers the wire service. noop
 * @deprecated
 */
export declare function registerWireService(): void;
type NoArgumentListener = () => void;
type ConfigListenerArgument = Record<string, any>;
type ConfigListener = (config: ConfigListenerArgument) => void;
type WireEventTargetListener = NoArgumentListener | ConfigListener;
/**
 * An implementation of the {@linkcode https://developer.mozilla.org/en-US/docs/Web/API/EventTarget EventTarget}
 * interface for the wire adapter.
 */
export interface WireEventTarget {
    addEventListener: (type: string, listener: WireEventTargetListener) => void;
    removeEventListener: (type: string, listener: WireEventTargetListener) => void;
    dispatchEvent: (evt: ValueChangedEvent) => boolean;
}
export { ValueChangedEvent };
