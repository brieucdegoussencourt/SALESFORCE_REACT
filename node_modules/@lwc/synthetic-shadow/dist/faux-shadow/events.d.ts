export declare const enum EventListenerContext {
    CUSTOM_ELEMENT_LISTENER = 0,
    SHADOW_ROOT_LISTENER = 1,
    UNKNOWN_LISTENER = 2
}
export declare const eventToContextMap: WeakMap<Event, EventListenerContext>;
/**
 * Events dispatched on shadow roots actually end up being dispatched on their hosts. This means that the event.target
 * property of events dispatched on shadow roots always resolve to their host. This function understands this
 * abstraction and properly returns a reference to the shadow root when appropriate.
 * @param event
 */
export declare function getActualTarget(event: Event): EventTarget;
export declare function addCustomElementEventListener(this: Element, type: string, listener: unknown, _options?: boolean | AddEventListenerOptions): void;
export declare function removeCustomElementEventListener(this: Element, type: string, listener: unknown, _options?: boolean | AddEventListenerOptions): void;
export declare function addShadowRootEventListener(sr: ShadowRoot, type: string, listener: unknown, _options?: boolean | AddEventListenerOptions): void;
export declare function removeShadowRootEventListener(sr: ShadowRoot, type: string, listener: unknown, _options?: boolean | AddEventListenerOptions): void;
