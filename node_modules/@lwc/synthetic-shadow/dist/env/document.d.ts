declare const DocumentPrototypeActiveElement: (this: Document) => Element | null;
declare const elementFromPoint: (x: number, y: number) => Element | null;
declare const elementsFromPoint: (x: number, y: number) => Element[];
declare const defaultViewGetter: (this: Document) => Window | null;
declare const querySelectorAll: {
    <K extends keyof HTMLElementTagNameMap>(selectors: K): NodeListOf<HTMLElementTagNameMap[K]>;
    <K_1 extends keyof SVGElementTagNameMap>(selectors: K_1): NodeListOf<SVGElementTagNameMap[K_1]>;
    <K_2 extends keyof MathMLElementTagNameMap>(selectors: K_2): NodeListOf<MathMLElementTagNameMap[K_2]>;
    <K_3 extends keyof HTMLElementDeprecatedTagNameMap>(selectors: K_3): NodeListOf<HTMLElementDeprecatedTagNameMap[K_3]>;
    <E extends Element = Element>(selectors: string): NodeListOf<E>;
}, getElementById: (elementId: string) => HTMLElement | null, getElementsByClassName: (classNames: string) => HTMLCollectionOf<Element>, getElementsByTagName: {
    <K extends keyof HTMLElementTagNameMap>(qualifiedName: K): HTMLCollectionOf<HTMLElementTagNameMap[K]>;
    <K_1 extends keyof SVGElementTagNameMap>(qualifiedName: K_1): HTMLCollectionOf<SVGElementTagNameMap[K_1]>;
    <K_2 extends keyof MathMLElementTagNameMap>(qualifiedName: K_2): HTMLCollectionOf<MathMLElementTagNameMap[K_2]>;
    <K_3 extends keyof HTMLElementDeprecatedTagNameMap>(qualifiedName: K_3): HTMLCollectionOf<HTMLElementDeprecatedTagNameMap[K_3]>;
    (qualifiedName: string): HTMLCollectionOf<Element>;
}, getElementsByTagNameNS: {
    (namespaceURI: "http://www.w3.org/1999/xhtml", localName: string): HTMLCollectionOf<HTMLElement>;
    (namespaceURI: "http://www.w3.org/2000/svg", localName: string): HTMLCollectionOf<SVGElement>;
    (namespaceURI: "http://www.w3.org/1998/Math/MathML", localName: string): HTMLCollectionOf<MathMLElement>;
    (namespace: string | null, localName: string): HTMLCollectionOf<Element>;
};
declare const getElementsByName: (elementName: string) => NodeListOf<HTMLElement>;
export { elementFromPoint, elementsFromPoint, DocumentPrototypeActiveElement, querySelectorAll, getElementById, getElementsByClassName, getElementsByName, getElementsByTagName, getElementsByTagNameNS, defaultViewGetter, };
