declare const windowAddEventListener: {
    <K extends keyof WindowEventMap>(type: K, listener: (this: Window, ev: WindowEventMap[K]) => any, options?: boolean | AddEventListenerOptions | undefined): void;
    (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions | undefined): void;
} & typeof addEventListener, windowRemoveEventListener: {
    <K extends keyof WindowEventMap>(type: K, listener: (this: Window, ev: WindowEventMap[K]) => any, options?: boolean | EventListenerOptions | undefined): void;
    (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void;
} & typeof removeEventListener, windowGetComputedStyle: ((elt: Element, pseudoElt?: string | null | undefined) => CSSStyleDeclaration) & typeof getComputedStyle, windowGetSelection: (() => Selection | null) & typeof getSelection;
export { windowAddEventListener, windowGetComputedStyle, windowGetSelection, windowRemoveEventListener, };
