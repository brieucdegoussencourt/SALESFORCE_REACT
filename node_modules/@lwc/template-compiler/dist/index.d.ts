import { Config } from './config';
import { TemplateCompileResult, TemplateParseResult } from './shared/types';
export * from './shared/types';
export { CustomRendererConfig, CustomRendererElementConfig } from './shared/renderer-hooks';
export { Config } from './config';
export { toPropertyName } from './shared/utils';
export { kebabcaseToCamelcase } from './shared/naming';
/**
 * Parses HTML markup into an AST
 * @param source HTML markup to parse
 * @param config HTML template compilation config
 * @returns Object containing the AST
 */
export declare function parse(source: string, config?: Config): TemplateParseResult;
export { compile };
/**
 * Compiles a LWC template to JavaScript source code consumable by the engine.
 * @param source HTML markup to compile
 * @param config HTML template compilation config
 * @returns Object containing the compiled code and any warnings that occurred.
 */
export default function compile(source: string, config: Config): TemplateCompileResult;
