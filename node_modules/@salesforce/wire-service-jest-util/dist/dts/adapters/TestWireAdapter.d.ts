export declare class TestWireAdapterTemplate {
    static _lastConfig: Record<string, any> | null;
    static _wireInstances: Set<TestWireAdapterTemplate>;
    static emit(value: any, filterFn?: (config: Record<string, any>) => boolean): void;
    static getLastConfig(): Record<string, any> | null;
    _dataCallback: (value: any) => void;
    config: {};
    constructor(dataCallback: (value: any) => void);
    update(config: Record<string, any>): void;
    connect(): void;
    disconnect(): void;
    emit(value: any): void;
    getConfig(): {};
}
export declare function buildTestWireAdapter(): {
    new (dataCallback: (value: any) => void): {
        _dataCallback: (value: any) => void;
        config: {};
        update(config: Record<string, any>): void;
        connect(): void;
        disconnect(): void;
        emit(value: any): void;
        getConfig(): {};
    };
    _lastConfig: null;
    _wireInstances: Set<{
        _dataCallback: (value: any) => void;
        config: {};
        update(config: Record<string, any>): void;
        connect(): void;
        disconnect(): void;
        emit(value: any): void;
        getConfig(): {};
    }>;
    emit(value: any, filterFn?: ((config: Record<string, any>) => boolean) | undefined): void;
    getLastConfig(): Record<string, any> | null;
};
