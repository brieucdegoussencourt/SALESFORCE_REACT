{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { getTodos, addTodo, updateTodo, deleteTodo } from './services/salesforce';\n\n// State and logic for managing todos\n\nexport const useTodos = () => {\n  _s();\n  //State Management\n  const [todos, setTodos] = useState([]);\n  const [title, setTitle] = useState('');\n  const [loading, setLoading] = useState(true);\n\n  // Fetch todos on initial render\n  useEffect(() => {\n    fetchTodos();\n  }, []);\n\n  // Function to fetch todos from the API\n  const fetchTodos = async () => {\n    try {\n      setLoading(true);\n      const data = await getTodos();\n      setTodos(data);\n    } catch (error) {\n      console.error('Error fetching todos:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Function to add a new todo\n  const handleAddTodo = async () => {\n    if (title.trim() === '') return;\n    try {\n      const newTodo = await addTodo({\n        title,\n        completed: false\n      });\n      setTodos([...todos, newTodo]);\n      setTitle('');\n    } catch (error) {\n      console.error('Error adding todo:', error);\n    }\n  };\n\n  // Function to toggle the completion status of a todo\n  const handleToggleTodo = async id => {\n    try {\n      const todo = todos.find(todo => todo.id === id);\n      if (todo) {\n        const updatedTodo = {\n          ...todo,\n          completed: !todo.completed\n        };\n        await updateTodo(updatedTodo);\n        setTodos(todos.map(todo => todo.id === id ? updatedTodo : todo));\n      }\n    } catch (error) {\n      console.error('Error toggling todo:', error);\n    }\n  };\n\n  // Function to delete a todo\n  const handleDeleteTodo = async id => {\n    try {\n      await deleteTodo(id);\n      setTodos(todos.filter(todo => todo.id !== id));\n    } catch (error) {\n      console.error('Error deleting todo:', error);\n    }\n  };\n  return {\n    todos,\n    title,\n    loading,\n    setTitle,\n    handleAddTodo,\n    handleToggleTodo,\n    handleDeleteTodo\n  };\n};\n_s(useTodos, \"OdvODcpczaua1p1Snd3TMXDeQqQ=\");","map":{"version":3,"names":["useState","useEffect","getTodos","addTodo","updateTodo","deleteTodo","useTodos","_s","todos","setTodos","title","setTitle","loading","setLoading","fetchTodos","data","error","console","handleAddTodo","trim","newTodo","completed","handleToggleTodo","id","todo","find","updatedTodo","map","handleDeleteTodo","filter"],"sources":["/Users/brieuc/Documents/GitHub/SALESFORCE_REACT/TODO_APP/todo-app/src/useTodos.ts"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { Todo } from './types';\nimport { getTodos, addTodo, updateTodo, deleteTodo } from './services/salesforce';\n\n// State and logic for managing todos\n\nexport const useTodos = () => {\n  //State Management\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [title, setTitle] = useState('');\n  const [loading, setLoading] = useState<boolean>(true);\n\n  // Fetch todos on initial render\n  useEffect(() => {\n    fetchTodos();\n  }, []);\n\n  // Function to fetch todos from the API\n  const fetchTodos = async () => {\n    try {\n      setLoading(true);\n      const data = await getTodos();\n      setTodos(data);\n    } catch (error) {\n      console.error('Error fetching todos:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Function to add a new todo\n  const handleAddTodo = async () => {\n    if (title.trim() === '') return;\n    try {\n      const newTodo = await addTodo({ title, completed: false });\n      setTodos([...todos, newTodo]);\n      setTitle('');\n    } catch (error) {\n      console.error('Error adding todo:', error);\n    }\n  };\n\n  // Function to toggle the completion status of a todo\n  const handleToggleTodo = async (id: string) => {\n    try {\n      const todo = todos.find((todo) => todo.id === id);\n      if (todo) {\n        const updatedTodo = { ...todo, completed: !todo.completed };\n        await updateTodo(updatedTodo);\n        setTodos(todos.map((todo) => (todo.id === id ? updatedTodo : todo)));\n      }\n    } catch (error) {\n      console.error('Error toggling todo:', error);\n    }\n  };\n\n  // Function to delete a todo\n  const handleDeleteTodo = async (id: string) => {\n    try {\n      await deleteTodo(id);\n      setTodos(todos.filter((todo) => todo.id !== id));\n    } catch (error) {\n      console.error('Error deleting todo:', error);\n    }\n  };\n\n  return {\n    todos,\n    title,\n    loading,\n    setTitle,\n    handleAddTodo,\n    handleToggleTodo,\n    handleDeleteTodo,\n  };\n};"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,SAASC,QAAQ,EAAEC,OAAO,EAAEC,UAAU,EAAEC,UAAU,QAAQ,uBAAuB;;AAEjF;;AAEA,OAAO,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAS,EAAE,CAAC;EAC9C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAU,IAAI,CAAC;;EAErD;EACAC,SAAS,CAAC,MAAM;IACda,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMA,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACFD,UAAU,CAAC,IAAI,CAAC;MAChB,MAAME,IAAI,GAAG,MAAMb,QAAQ,CAAC,CAAC;MAC7BO,QAAQ,CAACM,IAAI,CAAC;IAChB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C,CAAC,SAAS;MACRH,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;;EAED;EACA,MAAMK,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAIR,KAAK,CAACS,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;IACzB,IAAI;MACF,MAAMC,OAAO,GAAG,MAAMjB,OAAO,CAAC;QAAEO,KAAK;QAAEW,SAAS,EAAE;MAAM,CAAC,CAAC;MAC1DZ,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEY,OAAO,CAAC,CAAC;MAC7BT,QAAQ,CAAC,EAAE,CAAC;IACd,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC5C;EACF,CAAC;;EAED;EACA,MAAMM,gBAAgB,GAAG,MAAOC,EAAU,IAAK;IAC7C,IAAI;MACF,MAAMC,IAAI,GAAGhB,KAAK,CAACiB,IAAI,CAAED,IAAI,IAAKA,IAAI,CAACD,EAAE,KAAKA,EAAE,CAAC;MACjD,IAAIC,IAAI,EAAE;QACR,MAAME,WAAW,GAAG;UAAE,GAAGF,IAAI;UAAEH,SAAS,EAAE,CAACG,IAAI,CAACH;QAAU,CAAC;QAC3D,MAAMjB,UAAU,CAACsB,WAAW,CAAC;QAC7BjB,QAAQ,CAACD,KAAK,CAACmB,GAAG,CAAEH,IAAI,IAAMA,IAAI,CAACD,EAAE,KAAKA,EAAE,GAAGG,WAAW,GAAGF,IAAK,CAAC,CAAC;MACtE;IACF,CAAC,CAAC,OAAOR,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;;EAED;EACA,MAAMY,gBAAgB,GAAG,MAAOL,EAAU,IAAK;IAC7C,IAAI;MACF,MAAMlB,UAAU,CAACkB,EAAE,CAAC;MACpBd,QAAQ,CAACD,KAAK,CAACqB,MAAM,CAAEL,IAAI,IAAKA,IAAI,CAACD,EAAE,KAAKA,EAAE,CAAC,CAAC;IAClD,CAAC,CAAC,OAAOP,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EAED,OAAO;IACLR,KAAK;IACLE,KAAK;IACLE,OAAO;IACPD,QAAQ;IACRO,aAAa;IACbI,gBAAgB;IAChBM;EACF,CAAC;AACH,CAAC;AAACrB,EAAA,CArEWD,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}