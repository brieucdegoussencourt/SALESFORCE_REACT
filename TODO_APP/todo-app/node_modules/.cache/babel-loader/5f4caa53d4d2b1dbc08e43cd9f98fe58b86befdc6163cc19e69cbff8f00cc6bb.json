{"ast":null,"code":"var _jsxFileName = \"/Users/brieuc/Documents/GitHub/SALESFORCE_REACT/TODO_APP/todo-app/src/App.tsx\",\n  _s = $RefreshSig$();\n//This file is the core of the React application, \n//handling the main logic for interacting with the todo list \n//and rendering the user interface.\n\nimport React, { useState, useEffect } from 'react';\nimport { getTodos, addTodo, updateTodo, deleteTodo } from './services/salesforce';\n\n// MAIN LOGIC FOR INTERACTING WITH TODO LIST\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  //state management variables\n  //todos: array of todo objects initially set to an empty array updated when fetching todos\n  const [todos, setTodos] = useState([]);\n  //title: string representing the title of the new todo item initially set to an empty string\n  const [title, setTitle] = useState('');\n  //loading: boolean representing the loading state initially set to true\n  const [loading, setLoading] = useState(true);\n\n  //useEffect hook to fetch todos when the component mounts\n  useEffect(() => {\n    fetchTodos();\n  }, []);\n\n  //function to fetch todos from the API & update the state\n  const fetchTodos = async () => {\n    try {\n      setLoading(true);\n      const data = await getTodos();\n      setTodos(data);\n    } catch (error) {\n      console.error('Error fetching todos:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  //function to add a new todo item & update the\n  const handleAddTodo = async () => {\n    if (title.trim() === '') return;\n    try {\n      const newTodo = await addTodo({\n        title,\n        completed: false\n      });\n      setTodos([...todos, newTodo]);\n      setTitle('');\n    } catch (error) {\n      console.error('Error adding todo:', error);\n    }\n  };\n\n  //function to update a todo item by id & title\n  const handleUpdateTodo = async (id, updatedTitle) => {\n    try {\n      const todoToUpdate = todos.find(todo => todo.id === id);\n      if (todoToUpdate) {\n        const updatedTodo = {\n          ...todoToUpdate,\n          title: updatedTitle\n        };\n        await updateTodo(updatedTodo);\n        setTodos(todos.map(todo => todo.id === id ? updatedTodo : todo));\n      }\n    } catch (error) {\n      console.error('Error updating todo:', error);\n    }\n  };\n\n  //function to toggle the completed status of a todo item\n  const handleToggleCompleted = async id => {\n    try {\n      const todoToUpdate = todos.find(todo => todo.id === id);\n      if (todoToUpdate) {\n        const updatedTodo = {\n          ...todoToUpdate,\n          completed: !todoToUpdate.completed\n        };\n        await updateTodo(updatedTodo);\n        setTodos(todos.map(todo => todo.id === id ? updatedTodo : todo));\n      }\n    } catch (error) {\n      console.error('Error toggling todo:', error);\n    }\n  };\n\n  //function to delete a todo item by id\n  const handleDeleteTodo = async id => {\n    try {\n      await deleteTodo(id);\n      setTodos(todos.filter(todo => todo.id !== id));\n    } catch (error) {\n      console.error('Error deleting todo:', error);\n      // Handle error appropriately\n    }\n  };\n\n  //RENDERING THE USER INTERFACE\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 p-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-md mx-auto bg-white shadow-md rounded p-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl font-bold mb-4\",\n        children: \"To-Do App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"flex-grow border rounded p-2\",\n          placeholder: \"Add a new to-do\",\n          value: title,\n          onChange: e => setTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddTodo,\n          className: \"ml-2 bg-blue-500 text-white px-4 py-2 rounded\",\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: todos.map(todo => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"flex items-center justify-between mb-2 p-2 border-b\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center flex-grow\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: todo.completed,\n              onChange: () => handleToggleCompleted(todo.id),\n              className: \"mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: todo.title,\n              onChange: e => handleUpdateTodo(todo.id, e.target.value),\n              className: `w-full border-b focus:outline-none ${todo.completed ? 'line-through text-gray-500' : ''}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDeleteTodo(todo.id),\n            className: \"text-red-500\",\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 17\n          }, this)]\n        }, todo.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"OdvODcpczaua1p1Snd3TMXDeQqQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","getTodos","addTodo","updateTodo","deleteTodo","jsxDEV","_jsxDEV","App","_s","todos","setTodos","title","setTitle","loading","setLoading","fetchTodos","data","error","console","handleAddTodo","trim","newTodo","completed","handleUpdateTodo","id","updatedTitle","todoToUpdate","find","todo","updatedTodo","map","handleToggleCompleted","handleDeleteTodo","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","checked","_c","$RefreshReg$"],"sources":["/Users/brieuc/Documents/GitHub/SALESFORCE_REACT/TODO_APP/todo-app/src/App.tsx"],"sourcesContent":["//This file is the core of the React application, \n//handling the main logic for interacting with the todo list \n//and rendering the user interface.\n\nimport React, { useState, useEffect } from 'react';\nimport { Todo } from './types';\nimport { getTodos, addTodo, updateTodo, deleteTodo } from './services/salesforce';\n\n// MAIN LOGIC FOR INTERACTING WITH TODO LIST\n\nfunction App() {\n  //state management variables\n  //todos: array of todo objects initially set to an empty array updated when fetching todos\n  const [todos, setTodos] = useState<Todo[]>([]);\n  //title: string representing the title of the new todo item initially set to an empty string\n  const [title, setTitle] = useState('');\n  //loading: boolean representing the loading state initially set to true\n  const [loading, setLoading] = useState<boolean>(true);\n\n  //useEffect hook to fetch todos when the component mounts\n  useEffect(() => {\n    fetchTodos();\n  }, []);\n\n  //function to fetch todos from the API & update the state\n  const fetchTodos = async () => {\n    try {\n      setLoading(true);\n      const data = await getTodos();\n      setTodos(data);\n    } catch (error) {\n      console.error('Error fetching todos:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  //function to add a new todo item & update the\n  const handleAddTodo = async () => {\n    if (title.trim() === '') return;\n    try {\n      const newTodo = await addTodo({ title, completed: false });\n      setTodos([...todos, newTodo]);\n      setTitle('');\n    } catch (error) {\n      console.error('Error adding todo:', error);\n    }\n  };\n\n  //function to update a todo item by id & title\n  const handleUpdateTodo = async (id: string, updatedTitle: string) => {\n    try {\n      const todoToUpdate = todos.find((todo) => todo.id === id);\n      if (todoToUpdate) {\n        const updatedTodo = { ...todoToUpdate, title: updatedTitle };\n        await updateTodo(updatedTodo);\n        setTodos(\n          todos.map((todo) => (todo.id === id ? updatedTodo : todo))\n        );\n      }\n    } catch (error) {\n      console.error('Error updating todo:', error);\n    }\n  };\n\n  //function to toggle the completed status of a todo item\n  const handleToggleCompleted = async (id: string) => {\n    try {\n      const todoToUpdate = todos.find((todo) => todo.id === id);\n      if (todoToUpdate) {\n        const updatedTodo = { ...todoToUpdate, completed: !todoToUpdate.completed };\n        await updateTodo(updatedTodo);\n        setTodos(\n          todos.map((todo) => (todo.id === id ? updatedTodo : todo))\n        );\n      }\n    } catch (error) {\n      console.error('Error toggling todo:', error);\n    }\n  };\n\n  //function to delete a todo item by id\n  const handleDeleteTodo = async (id: string) => {\n    try {\n      await deleteTodo(id);\n      setTodos(todos.filter((todo) => todo.id !== id));\n    } catch (error) {\n      console.error('Error deleting todo:', error);\n      // Handle error appropriately\n    }\n  };\n\n  //RENDERING THE USER INTERFACE\n  \n  return (\n    <div className=\"min-h-screen bg-gray-100 p-4\">\n      <div className=\"max-w-md mx-auto bg-white shadow-md rounded p-6\">\n        <h1 className=\"text-2xl font-bold mb-4\">To-Do App</h1>\n        <div className=\"flex mb-4\">\n          <input\n            type=\"text\"\n            className=\"flex-grow border rounded p-2\"\n            placeholder=\"Add a new to-do\"\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n          />\n          <button\n            onClick={handleAddTodo}\n            className=\"ml-2 bg-blue-500 text-white px-4 py-2 rounded\"\n          >\n            Add\n          </button>\n        </div>\n        {loading ? (\n          <div>Loading...</div>\n        ) : (\n          <ul>\n            {todos.map((todo) => (\n              <li\n                key={todo.id}\n                className=\"flex items-center justify-between mb-2 p-2 border-b\"\n              >\n                <div className=\"flex items-center flex-grow\">\n                  <input\n                    type=\"checkbox\"\n                    checked={todo.completed}\n                    onChange={() => handleToggleCompleted(todo.id)}\n                    className=\"mr-2\"\n                  />\n                  <input\n                    type=\"text\"\n                    value={todo.title}\n                    onChange={(e) => handleUpdateTodo(todo.id, e.target.value)}\n                    className={`w-full border-b focus:outline-none ${\n                      todo.completed ? 'line-through text-gray-500' : ''\n                    }`}\n                  />\n                </div>\n                <button\n                  onClick={() => handleDeleteTodo(todo.id)}\n                  className=\"text-red-500\"\n                >\n                  Delete\n                </button>\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}